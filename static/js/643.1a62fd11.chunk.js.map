{"version":3,"file":"static/js/643.1a62fd11.chunk.js","mappings":"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","sources":["pages/Register/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport { Button, Input, FormControl, FormLabel } from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name': {\n        setName(value);\n        break;\n      }\n      case 'email': {\n        setEmail(value);\n        break;\n      }\n      case 'password': {\n        setPassword(value);\n        break;\n      }\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    resetFields();\n  };\n\n  const resetFields = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <FormControl\n      borderRadius=\"10px\"\n      border=\"1px\"\n      p=\"4\"\n      borderColor=\"inherit\"\n      width=\"100%\"\n      maxWidth=\"400px\"\n      isRequired\n    >\n      <form onSubmit={handleSubmit}>\n        <FormLabel>Name</FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n          placeholder=\"Enter name\"\n          id={nanoid()}\n        />\n        <FormLabel>Email</FormLabel>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          required\n          placeholder=\"Enter email\"\n          id={nanoid()}\n        />\n        <FormLabel>Password</FormLabel>\n        <Input\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n          title=\"The password must be 8 characters or more and contain numbers and capital letters.\"\n          type=\"password\"\n          name=\"password\"\n          required\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={handleChange}\n          id={nanoid()}\n        />\n\n        <Button marginTop=\"10px\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </FormControl>\n  );\n};\n\nexport default Register;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","currentTarget","value","resetFields","borderRadius","border","p","borderColor","width","maxWidth","isRequired","onSubmit","preventDefault","authOperations","I","type","onChange","required","placeholder","id","nanoid","pattern","title","marginTop","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","display","textAlign","useFormControl","_b","_c","disabled","readOnly","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}